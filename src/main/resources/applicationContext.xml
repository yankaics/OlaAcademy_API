<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd "
	default-lazy-init="true">
	
	<!-- 配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- mysql配置 -->
				<value>classpath*:/application.properties</value>
				<!-- redis配置 -->
				<value>classpath*:/redis.properties</value>
			</list>
		</property>
	</bean>

	<context:annotation-config />
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired,@Resource的属性被注入 -->
	<context:component-scan base-package="com.kzsrm" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minPoolSize" value="20" />
		<property name="maxPoolSize" value="100" />
		<property name="maxIdleTime" value="1800" />
		<property name="acquireIncrement" value="5" />
		<property name="maxStatements" value="0" />
		<property name="initialPoolSize" value="20" />
		<property name="idleConnectionTestPeriod" value="1800" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="true" />
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

	<!-- myBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mapper/Configuration.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:/com/kzsrm/model/UserMapper.xml</value>
				<value>classpath:/com/kzsrm/model/CollectionMapper.xml</value>
				<value>classpath:/com/kzsrm/model/CourseMapper.xml</value>
				<value>classpath:/com/kzsrm/model/PointLogMapper.xml</value>
				<value>classpath:/com/kzsrm/model/SubjectMapper.xml</value>
				<value>classpath:/com/kzsrm/model/SubjectLogMapper.xml</value>
				<value>classpath:/com/kzsrm/model/SubjectExamLogMapper.xml</value>
				<value>classpath:/com/kzsrm/model/SubjectWorkLogMapper.xml</value>
				<value>classpath:/com/kzsrm/model/VideoMapper.xml</value>
				<value>classpath:/com/kzsrm/model/VideoLogMapper.xml</value>
				<value>classpath:/com/kzsrm/model/OlaCircleMapper.xml</value>
				<value>classpath:/com/kzsrm/model/CirclePraiseMapper.xml</value>
				<value>classpath:/com/kzsrm/model/AttentionShipMapper.xml</value>
				<value>classpath:/com/kzsrm/model/CommentMapper.xml</value>
				<value>classpath:/com/kzsrm/model/KeywordMapper.xml</value>
				<value>classpath:/com/kzsrm/model/OrganizationMapper.xml</value>
				<value>classpath:/com/kzsrm/model/TeacherOrgMapper.xml</value>
				<value>classpath:/com/kzsrm/model/TeacherMapper.xml</value>
				<value>classpath:/com/kzsrm/model/CheckInMapper.xml</value>
				<value>classpath:/com/kzsrm/model/yzm.xml</value>
				<value>classpath:/com/kzsrm/model/ExaminationMapper.xml</value>
				<value>classpath:/com/kzsrm/model/GoodsMapper.xml</value>
				<value>classpath:/com/kzsrm/model/OptionMapper.xml</value>
				<value>classpath:/com/kzsrm/model/OrderInfoMapper.xml</value>
				<value>classpath:/com/kzsrm/model/MessageMapper.xml</value>
				<value>classpath:/com/kzsrm/model/MessageRecordMapper.xml</value>
				<value>classpath:/com/kzsrm/model/BroadcastMapper.xml</value>
				<value>classpath:/com/kzsrm/model/GroupMapper.xml</value>
				<value>classpath:/com/kzsrm/model/UserGroupMapper.xml</value>
				<value>classpath:/com/kzsrm/model/HomeworkMapper.xml</value>
				<value>classpath:/com/kzsrm/model/HomeworkSubjectMapper.xml</value>
				<value>classpath:/com/kzsrm/model/BannerMapper.xml</value>
				<value>classpath:/com/kzsrm/model/CoinHistoryMapper.xml</value>
				<value>classpath:/com/kzsrm/model/ExchangeMapper.xml</value>
				<value>classpath:/com/kzsrm/model/MaterialMapper.xml</value>
			</list>
		</property>
	</bean>

	<!-- 事务管理器配置, 使用jdbc事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<!-- jedis 配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >
          <property name="maxIdle" value="${redis.maxIdle}" />
          <property name="maxWaitMillis" value="${redis.maxWait}" />
          <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean >
    
    <!-- redis服务器中心 -->
    <bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
          <property name="poolConfig" ref="poolConfig" />
          <property name="port" value="${redis.port}" />
          <property name="hostName" value="${redis.host}" />
          <property name="password" value="${redis.password}" />
          <property name="timeout" value="${redis.timeout}" ></property>
    </bean >
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
          <property name="connectionFactory" ref="connectionFactory" />
          <property name="enableTransactionSupport" value="true" />
          <property name="keySerializer" >
              <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
          </property>
          <property name="valueSerializer" >
              <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
          </property>
    </bean >
    
	<!-- cache配置 -->
    <bean id="methodCacheInterceptor" class="com.kzsrm.interceptor.MethodCacheInterceptor" >
          <property name="redisTemplate" ref="redisTemplate" />
    </bean >
    
	<!-- 需要加入缓存的类或方法 -->
	<bean id="methodCachePointCut"
		class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref local="methodCacheInterceptor" />
		</property>
		<property name="patterns">
			<list>
				<!-- 确定正则表达式列表 -->
				<value>.*ServiceImpl.*</value>
			</list>
		</property>
	</bean>
  	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
	
	<!-- 定时器 -->
	<bean id="myTimer" class="com.kzsrm.controller.UserController"></bean>
	<bean id="timeDitail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="myTimer"></property>
		<property name="targetMethod" value="doit"></property>
	</bean>

	<bean id="timeTigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="timeDitail"></property>
		<property name="cronExpression">
			<!-- 每天凌晨00点执行 -->
			<value>0 0 00 * * ?</value>
		</property>
	</bean>

	<bean id="startJob"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="timeTigger" />
			</list>
		</property>
	</bean>


	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean
		class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />

	<!-- <task:scheduled-tasks> <task:scheduled ref="taskService" method="taskParty" 
		cron="0 44 0/1 * * ?"/> </task:scheduled-tasks> -->

</beans>